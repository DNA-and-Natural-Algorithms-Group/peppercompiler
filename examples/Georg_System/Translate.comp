declare component Translate(t, di, do, c): in -> out

sequence toe_in = ?N : <t>
sequence data_in = ?N : <di>
sequence toe_out = ?N : <t>
sequence data_out = ?N : <do>

sup-sequence in = toe_in data_in : <t+di>
sup-sequence out = toe_out data_out : <t+do>

strand [dummy] In = in : <t+di>
strand Base = ?N : <t+di>
strand Out = <di-t-c>N out : <di + do - c>

## Structures
structure IN = In : domain .
structure Gate = Out + Base : <di>( <do-c>. + <di>) <t>.

structure IN_waste = In + Base : domain (+)
structure OUT = Out : domain ..

kinetic IN + Gate -> OUT + IN_waste
