declare Circuit: ->

import Input_Strand, Translate, Translate_Rev, Translate_Loop
import And21_Rev, And31, Threshold, Detector

# Inputs
gate In1 = Input_Strand("TGAGGTAGTAGGTTGTATGGT",  21): -> let_7c   # 15nt data region
gate In2 = Input_Strand("TAAGGCACGCGGTGAATGCC",   20): -> miR_124a # 14nt "
gate In3 = Input_Strand("TAGCAGCACATAATGGTTTGTG", 22): -> miR_15a  # 16nt "
gate In4 = Input_Strand("CCCTGTAGAACCGAATTTGTGT", 22): -> miR_10b  # ---"---
gate In5 = Input_Strand("TGAGATGAAGCACTGTAGCTCA", 22): -> miR_143
gate In6 = Input_Strand("TGGAGTGTGACAATGGTGTTTG", 22): -> miR_122a

# Translation
gate Trans1 = Translate(6, 15, 30, 3): let_7c -> Jout
gate Trans2 = Translate_Rev(6, 14, 30, 3): miR_124a -> Mout
gate Trans3 = Translate(6, 16, 30, 1): miR_15a -> Sout
gate Trans4 = Translate(6, 16, 30, 0): miR_10b -> Sout
gate Trans5 = Translate(6, 16, 30, 3): miR_143 -> Rout  # Can't design the actual psuedoknotted gate

gate Trans6 = Translate(6, 16, 30, 3): miR_122a -> Nout
gate Trans7 = Translate_Loop(6, 30, 30, 3, 15): Nout -> Rout

# Circuit
gate And1 = And21_Rev(6, 30, 30, 30, 3, 15): Jout + Mout -> Eout

gate And2 = And31(6, 30, 30, 30, 30, 3, 15): Sout + Eout + Rout -> Aout

gate Thresh = Threshold(6, 30, 30, 30, 30, 3, 15): Aout -> Th_out

#gate Det_Out = Detector(6, 30): Th_out -> 

