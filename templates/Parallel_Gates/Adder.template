declare Adder(t, c, cat_toe, i): x(InX) + y(InY) + z(InZ) -> s(OutS) + c(OutC)

# Default values
# t = 6
# c = 3
# cat_toe = 4
# i = 20

# Derived values
#!i1 = i2 = i3a = i3b  =  i
#!i3 = os = oc  =  i3a - cat_toe

## Sequences
sequence tx =  ?N : <t>
sequence ty =  ?N : <t>
sequence tz =  ?N : <t>
sequence ts =  ?N : <t>
sequence tc =  ?N : <t>
sequence dx =  S ?N S : <i1>
sequence dy =  S ?N S : <i2>
sequence dz =  S ?N S : <i3>
sequence ds =  S ?N S : <os>
sequence dc =  S ?N S : <oc>

## Super-sequences
sequence y =  ty dy : <t+i2>
sequence s =  ds ts : <t+os>
sequence c =  dc tc : <t+oc>
sequence z =  dz tz : <t+i3>
sequence x =  dx tx : <t+i1>


## Strands
# Inputs
strand inX = x* : <t+i1>
strand inY = y* : <t+i2>
strand inZ = ?N z* : <i3b-c+oc> # inZ is the carry from upstream gate

# Gate sections
strand Y = ?N y  : <i1+i2>
strand S = ?N s* : <i3a-c+os>
strand C = ?N c* : <i3b-c+oc>
strand Z = z  ?N : <i3a+i3b+i2>
strand X = x : <t+i1>
strand fuel = ?N : <i3a+i3b>

## Structures/Complexes
# Input
structure InX = inX : U<t+i1>
structure InY = inY : U<t+i2>
structure [no-opt] InZ = inZ : U<i3b-c+oc>  # InZ is a dummy strand optimized elsewhere, so don't optimize this one.

# Gate (and partial structures)
structure [10nt] G  = Y + S + C + Z + X : H<i1>(H<i2>(+ H<i3a>(U<os-c> + H<i3b>(U<oc-c> +))) +) U<t>
structure [10nt] Ga = Y + S + C + Z     : U<i1> H<i2>(+ H<i3a>(U<os-c> + H<i3b>(U<oc-c> +)))
structure [10nt] Gb =     S + C + Z     :           H<i3a>(U<os-c> + H<i3b>(U<oc-c> +)) U<i2>
structure [10nt] Gc =   inZ + C + Z     :           U<i3b-t-c> H<t+i3>(+ H<i3b>(U<oc-c> +) U<cat_toe>) U<i2-t>
structure [no-opt] wasteG = fuel + Z    : H<i3a+i3b>(+) U<i2>

structure Fuel = fuel : U<i3a+i3b>

# Paired inputs (waste)
structure [no-opt] wasteX = inX + X : H<t+i1>(+)
structure [no-opt] wasteY = inY + Y : H<t+i2>(+ U<i1-t>)

# Outputs
structure OutS = S : U<i3a-c+os>
structure OutC = C : U<i3b-c+oc>


## Kinetics
# Overall: InX + InY + InZ + G + Fuel  ->  wasteX + wasteY + wasteG + InZ + OutS + OutC
kin InX + G   -> wasteX + Ga
kin InY + Ga  -> wasteY + Gb
kin InZ + Gb  -> Gc + OutS
kin Gc + Fuel -> wasteG + InZ + OutC

